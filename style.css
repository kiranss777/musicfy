@import url('https://fonts.googleapis.com/css2?family=Rajdhani:wght@300&display=swap');

*{
    margin: 0;
    padding: 0;
}
.brand{
    display: flex;
    align-items: center;
    font-weight: 900;
    font-size: 2.5rem;
}
.brand img{
    width: 100px;
    padding: 5px;
    border-radius: 50%;
    
}


body{
    background-color: #1c1a26;
    background-image: url('background4.png');
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: right;
    transition: background-image 4s ease-in-out;
}

nav{
    font-family: 'Rajdhani', sans-serif;
    font-weight: bold;
    
}
nav ul{
    align-items: center;
    display: flex;
    list-style-type: none;
    height: 100px;
    color: white;
    background-color: #4d2a81dd;
}
nav ul li{
    padding:0 10px ;
}

.container{
    font-family: 'Rajdhani', sans-serif;
    font-weight: 1000;
    display: flex;
    flex-direction: column;
    align-content: flex-start;
    color: rgb(251, 250, 250);
    background-color: rgba(81, 77, 81, 0.9);
    max-height: 80vh;
    width: auto;
    max-width: 75%;
    margin: 25px;
    border-radius: 20px;
    padding: 0;
    overflow-y: scroll;
    justify-content: center;
    align-items: center;
}

.heading {
    
    font-family: 'Rajdhani', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    color: rgb(251, 250, 250);
    max-height: 75vh;
    max-width: 35%;
    margin: 25px;
    border-radius: 12px;
    padding-left: 10px;
    position: relative; /* For the absolute positioning of pseudo-elements */
    background: linear-gradient(90deg, #7b03f4, #3008f4, #07b7f2, #36013c);
    background-size: 400%;
    z-index: 1;
    opacity: 0.9;
    overflow: hidden; /* To handle the overflow of pseudo-elements */
    animation: animate 8s linear infinite;
}

@keyframes animate {
    0% {
        background-position: 0%;
    }
    100% {
        background-position: 400%;
    }
}

.heading:before {
    content: '';
    position: absolute;
    top: -5px;
    bottom: -5px;
    right: -5px;
    left: -5px;
    z-index: -1;
    background: linear-gradient(90deg, #7b03f4, #3008f4, #07b7f2, #36013c);
    background-size: 400%;
    border-radius: 15px;
    filter: blur(20px);
    opacity: 1; /* Ensure it's always visible */
    animation: animate 8s linear infinite;
}


.bottom{
    position: sticky;
    bottom: 0;
    background-color: #4d2a81dd;
    height: 120px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;   
}

.icons{
    margin-top: 5px;
}
.icons i{
    cursor: pointer;
    filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.5)) 0.3s ease-in-out;
    transition: filter 0.3s ease-in-out;
    
    margin: 10px;
}
.icons i:hover{
    /*box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.7);*/
    filter: drop-shadow(2px 2px 10px rgba(255, 255, 255, 0.7)); /* Larger, more prominent shadow on hover */
}

#myProgressBar{
    width: 80vw;
    
    cursor: pointer;
}

.songlist{
    width: 100%;
    overflow: scroll; 
}

.songItem {
    display: flex;
    overflow: hidden;
    align-items: center; /* Vertically center items in the flex container */
    justify-content: space-between; /* Space out the flex items */
    background-color: rgba(54, 52, 54, 0.9);
    height: 65px;
    font-size: large;
    width: 60vw; 
    margin: 10px 0; /* Adjust as needed */
    box-sizing: border-box; /* Include padding and border in width calculation */
    border-radius: 20px;
    transition: transform 0.3s ease;
}
.songItem:hover{
    transform: scale(1.1);
}

.songItem span{
    padding: 5px;
}

.songItem img{
    width: 60px; 
    margin-left: 10px;
    border-radius: 15px; 
}
.timeStamp{
    margin: 0 23px;
}

.songItemPlay  {
    cursor: pointer;
    transition: transform 0.3s ease; /* Smooth transition for scaling */
}

.songItemPlay:hover {
    transform: scale(1.5); /* Adjust the scale value as needed */
}


.songInfo{
    font-family: 'Rajdhani', sans-serif;
    display: flex;
    color: white;
    font-size: large;
    margin-top: 10px;
    margin-bottom: 10px;
    align-items: center; /* Vertically center items in the container */
    justify-content: center; /* Horizontally center items in the container */
    text-align: center; 
}
.songInfo img{
    margin-right: 10px;
    opacity: 0;
    transition: opacity 0.5s ease-in;
}

.playing {
    color: #4CAF50; /* Example: Green color for the playing song */
    /* Add more styles as needed */
}
.sparkle-button {
    --active: 0;
    --bg: radial-gradient(
              40% 50% at center 100%,
              hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
              transparent
          ),
          radial-gradient(
              80% 100% at center 120%,
              hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
              transparent
          ),
          hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
    background: var(--bg);
    font-size: 1.2rem;
    font-weight: 500;
    border: 0;
    cursor: pointer;
    padding: 1em 1em;
    display: flex;
    align-items: center;
    gap: 0.25em;
    white-space: nowrap;
    border-radius: 100px;
    position: relative;
    box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) hsl(260 97% 61% / 0.75),
          0 0em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
          0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
    transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
    scale: calc(1 + (var(--active) * 0.1));
    transition: .3s;
  }
  
  .sparkle-button:active {
    scale: 1;
    transition: .3s;
  }
  
  .sparkle path {
    color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
    transform-box: fill-box;
    transform-origin: center;
    fill: currentColor;
    stroke: currentColor;
    animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
    animation-duration: 0.6s;
    transition: color var(--transition);
  }
  
  .sparkle-button:is(:hover, :focus-visible) path {
    animation-name: bounce;
  }
  
  @keyframes bounce {
    35%, 65% {
      scale: var(--scale);
    }
  }
  
  .sparkle path:nth-of-type(1) {
    --scale: 0.5;
    --delay: 0.1;
    --base: 40%;
  }
  
  .sparkle path:nth-of-type(2) {
    --scale: 1.5;
    --delay: 0.2;
    --base: 20%;
  }
  
  .sparkle path:nth-of-type(3) {
    --scale: 2.5;
    --delay: 0.35;
    --base: 30%;
  }
  
  .sparkle-button:before {
    content: "";
    position: absolute;
    inset: -0.2em;
    z-index: -1;
    border: 0.25em solid hsl(260 97% 50% / 0.5);
    border-radius: 100px;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
  }
  
  .spark {
    position: absolute;
    inset: 0;
    border-radius: 100px;
    rotate: 0deg;
    overflow: hidden;
    mask: linear-gradient(white, transparent 50%);
    animation: flip calc(var(--spark) * 2) infinite steps(2, end);
  }
  
  @keyframes flip {
    to {
      rotate: 360deg;
    }
  }
  
  .spark:before {
    -webkit-mask: radial-gradient(white, transparent 50%);
    mask: radial-gradient(white, transparent 50%);
    content: "";
    position: absolute;
    width: 200%;
    aspect-ratio: 1;
    top: 0%;
    left: 50%;
    z-index: -1;
    translate: -50% -15%;
    rotate: 0;
    transform: rotate(-90deg);
    opacity: calc((var(--active)) + 0.4);
    background: conic-gradient(
          from 0deg,
          transparent 0 340deg,
          white 360deg
      );
    transition: opacity var(--transition);
    animation: rotate var(--spark) linear infinite both;
  }
  
  .spark:after {
    content: "";
    position: absolute;
    inset: var(--cut);
    border-radius: 100px;
  }
  
  .backdrop {
    position: absolute;
    inset: var(--cut);
    background: var(--bg);
    border-radius: 100px;
    transition: background var(--transition);
  }
  
  @keyframes rotate {
    to {
      transform: rotate(90deg);
    }
  }
  
  @supports(selector(:has(:is(+ *)))) {
    body:has(button:is(:hover, :focus-visible)) {
      --active: 1;
      --play-state: running;
    }
  
    .bodydrop {
      display: none;
    }
  }
  
  .sparkle-button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
    --active: 1;
    --play-state: runnin;
  }
  
  .sparkle-button:is(:hover, :focus-visible) {
    --active: 1;
    --play-state: running;
  }
  
  .sp {
    position: relative;
  }
  
  .particle-pen {
    -webkit-mask: radial-gradient(white, transparent 50%);
    mask: radial-gradient(white, transparent 50%);
    position: absolute;
    width: 200%;
    aspect-ratio: 1;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    -webkit-mask: radial-gradient(white, transparent 65%);
    z-index: -1;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
  }
  
  .particle {
    fill: white;
    width: calc(var(--size, 0.25) * 1rem);
    aspect-ratio: 1;
    position: absolute;
    top: calc(var(--y) * 1%);
    left: calc(var(--x) * 1%);
    opacity: var(--alpha, 1);
    animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
    transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
    z-index: -1;
    animation-play-state: var(--play-state, paused);
  }
  
  .particle path {
    fill: hsl(0 0% 90%);
    stroke: none;
  }
  
  .particle:nth-of-type(even) {
    animation-direction: reverse;
  }
  
  @keyframes float-out {
    to {
      rotate: 360deg;
    }
  }
  
  .text {
    background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
    -webkit-background-clip: text;
    background-clip: text;
    translate: 2% -6%;
    letter-spacing: 0.01ch;
    background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
    -webkit-background-clip: text;
    color: transparent;
    transition: background var(--transition);
  }
  
  .sparkle-button svg {
    inline-size: 1.25em;
    translate: -25% -5%;
  }